rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Regras para a coleção de usuários
    match /users/{userId} {
      // Permitir criar conta (tanto autenticado quanto não autenticado para suportar cadastro)
      allow create: if (request.auth != null && request.auth.uid == userId)
                    || request.auth == null;

      // Permitir ler o próprio perfil
      allow read: if request.auth != null && request.auth.uid == userId;

      // Permitir ler perfil do parceiro vinculado
      allow read: if request.auth != null
                  && resource.data.partnerId == request.auth.uid;

      // Permitir buscar usuários por email ou telefone (necessário para login e convites)
      // Permitir leitura pública para suportar login
      allow read: if true;

      // Permitir atualizar o próprio perfil
      allow update: if request.auth != null && request.auth.uid == userId;

      // Permitir atualizar perfil de outro usuário APENAS para vinculação
      // quando está definindo partnerId para si mesmo (aceitar convite)
      allow update: if request.auth != null
                    && request.resource.data.partnerId == request.auth.uid
                    && request.resource.data.partnerName is string
                    && request.resource.data.relationshipStart is string;

      // Permitir deletar apenas se autenticado e for admin ou o próprio usuário
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Regras para a coleção de surpresas
    match /surprises/{surpriseId} {
      // Permitir criar surpresa se estiver autenticado e for o remetente
      allow create: if request.auth != null
                    && request.resource.data.senderId == request.auth.uid
                    && request.resource.data.senderName is string
                    && request.resource.data.recipientId is string
                    && request.resource.data.recipientName is string
                    && request.resource.data.type is string
                    && request.resource.data.content is string
                    && request.resource.data.title is string;

      // Permitir ler surpresas recebidas
      allow read: if request.auth != null
                  && resource.data.recipientId == request.auth.uid;

      // Permitir ler surpresas enviadas
      allow read: if request.auth != null
                  && resource.data.senderId == request.auth.uid;

      // Permitir deletar apenas se for o destinatário
      allow delete: if request.auth != null
                    && resource.data.recipientId == request.auth.uid;

      // Permitir atualizar (marcar como vista, por exemplo) se for o destinatário
      allow update: if request.auth != null
                    && resource.data.recipientId == request.auth.uid;
    }

    // Regras para a coleção de notificações/convites
    match /notifications/{notificationId} {
      // Permitir criar notificação se estiver autenticado
      allow create: if request.auth != null
                    && request.resource.data.senderId == request.auth.uid;

      // Permitir ler notificações recebidas OU enviadas
      allow read: if request.auth != null
                  && (resource.data.recipientId == request.auth.uid
                      || resource.data.senderId == request.auth.uid);

      // Permitir atualizar notificações (aceitar, rejeitar, etc.)
      allow update: if request.auth != null
                    && (resource.data.recipientId == request.auth.uid
                        || resource.data.senderId == request.auth.uid);

      // Permitir deletar próprias notificações
      allow delete: if request.auth != null
                    && (resource.data.recipientId == request.auth.uid
                        || resource.data.senderId == request.auth.uid);
    }

    // Regras para conflitos de data
    match /dateConflicts/{conflictId} {
      // Permitir criar conflito
      allow create: if request.auth != null;

      // Permitir ler conflitos relacionados ao usuário
      allow read: if request.auth != null
                  && (resource.data.user1Id == request.auth.uid
                      || resource.data.user2Id == request.auth.uid);

      // Permitir atualizar conflitos relacionados ao usuário
      allow update: if request.auth != null
                    && (resource.data.user1Id == request.auth.uid
                        || resource.data.user2Id == request.auth.uid);

      // Permitir deletar conflitos resolvidos
      allow delete: if request.auth != null
                    && (resource.data.user1Id == request.auth.uid
                        || resource.data.user2Id == request.auth.uid);
    }

    // ===== CHALLENGES (Desafios do Dia) =====
    match /challenges/{challengeId} {
      allow read, write: if request.auth != null;
    }

    // ===== EVENTS (Próximos Eventos) =====
    match /events/{eventId} {
      allow read, write: if request.auth != null;
    }

    // ===== MOODS (Humor do Dia) =====
    match /moods/{moodId} {
      allow read, write: if request.auth != null;
    }

    // ===== LAYOUT (Configuração da Home) =====
    match /layout/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // ===== INVITES (Convites de Vinculação) =====
    match /invites/{inviteId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;
      allow update, delete: if request.auth != null;
    }
  }
}